<ClientManagerView:EventResourceDictionary x:Class="FacebookClient.PhotoViewerEventResourceDictionary"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:ClientManager="clr-namespace:ClientManager"
    xmlns:ClientManagerControls="clr-namespace:ClientManager.Controls"
    xmlns:ClientManagerView="clr-namespace:ClientManager.View"
    xmlns:FacebookClient="clr-namespace:FacebookClient"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <FacebookClient:DateTimeToStringConverter x:Key="DateTimeConverter"/>
    <FacebookClient:MultiValueAggregator x:Key="MultiAggregator" />
    <FacebookClient:IsStringNullOrWhitespaceConverter x:Key="IsStringNullOrWhitespaceConverter" />
    <FacebookClient:RotationAngleToSimplePositiveAngleConverter x:Key="AngleConverter"/>

    <SolidColorBrush x:Key="Background_PhotoViewerDefault" Color="#444444" />
    <SolidColorBrush x:Key="Background_PhotoViewerOver" Color="#696969" />
    <SolidColorBrush x:Key="Background_PhotoViewerPressed" Color="#909090" />
    <SolidColorBrush x:Key="Background_PhotoViewerChecked" Color="#555555" />

    <ItemsPanelTemplate x:Key="VirtualizedItemsPanelTemplate">
        <VirtualizingStackPanel />
    </ItemsPanelTemplate>

    <!-- Style for buttons (thumbnails) in the film strip -->
    <Style x:Key="FilmStripThumbnailButton" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonBorder"
              BorderThickness="0"
              CornerRadius="0"
              RenderTransformOrigin="0.5,0.99">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                            </TransformGroup>
                        </Border.RenderTransform>
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Data template for photos in the film strip -->
    <DataTemplate x:Key="FilmStripItemTemplate">
        <ClientManagerControls:FacebookPhotoDragContainer FacebookPhoto="{Binding}">
            <Button
          Height="80" Width="80"
          Click="OnNavigateToContentButtonClicked"
          ClientManagerView:ViewManager.NavigationContent="{Binding}"
          Focusable="False"
          IsEnabled="{Binding HasData, FallbackValue=False}"
          Style="{StaticResource FilmStripThumbnailButton}">
                <ContentControl Margin="3" Template="{DynamicResource StandardPhotoChromeContentControlTemplate}" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch">
                    <ClientManagerControls:FacebookImageControl FacebookImage="{Binding Image}" FacebookImageDimensions="Normal">
                        <ClientManagerControls:FacebookImageControl.Template>
                            <ControlTemplate TargetType="{x:Type ClientManagerControls:FacebookImageControl}">
                                <Grid Margin="4,4,4,11">
                                    <Border x:Name="PlaceholderBorder" Background="Black" Visibility="Collapsed" />
                                    <Image x:Name="MainImage" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Uniform" Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageSource}" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=ImageSource}" Value="{x:Null}">
                                        <Setter TargetName="MainImage" Property="Visibility" Value="Collapsed" />
                                        <Setter TargetName="PlaceholderBorder" Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </ClientManagerControls:FacebookImageControl.Template>
                    </ClientManagerControls:FacebookImageControl>
                </ContentControl>
            </Button>
        </ClientManagerControls:FacebookPhotoDragContainer>
    </DataTemplate>

    <!-- Color overrides for the film strip -->
    <Style x:Key="FilmStripStyle">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent"/>
        </Style.Resources>
    </Style>

    <!-- ItemsPanel used to animate the currently selected photo into view -->
    <ItemsPanelTemplate x:Key="FilmStripPanel">
        <FacebookClient:FilmStripPanel ItemHeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type FacebookClient:FilmStripControl}}, Path=ItemHeight}"/>
    </ItemsPanelTemplate>
    <!-- Animations for the photos in the film strip -->
    <Style x:Key="FilmStripItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid
              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
              Background="Transparent"
              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                        <ContentPresenter x:Name="Presenter"
                Content="{TemplateBinding ContentControl.Content}"
                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                RenderTransformOrigin="0.5,0.5">
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True">
                            <Setter Property="Panel.ZIndex" Value="10" />
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Presenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                            <SplineDoubleKeyFrame KeySpline="0,0,0.875,1" KeyTime="00:00:00" Value="0.5"/>
                                            <SplineDoubleKeyFrame KeySpline="0.125,0,0.875,1" KeyTime="00:00:00.100" Value="1.5"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.150" Value="1.4"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Presenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <SplineDoubleKeyFrame KeySpline="0,0,0.875,1" KeyTime="00:00:00" Value="0.5"/>
                                            <SplineDoubleKeyFrame KeySpline="0.125,0,0.875,1" KeyTime="00:00:00.100" Value="1.5"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.150" Value="1.4"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                        Duration="00:00:00.100"
                        Storyboard.TargetName="Presenter"
                        Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                        To="1"/>
                                        <DoubleAnimation
                        Duration="00:00:00.100"
                        Storyboard.TargetName="Presenter"
                        Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                        To="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--
            Ensure the ListBoxItem is at the top of the ZIndex on MouseOver or else it will overlap with adjacent ListBoxItems
            when it is zoomed-in during selection. 
            -->
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Panel.ZIndex" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Style to collapse text if empty -->
    <Style x:Key="CollapseIfEmptyText" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="Text" Value="">
                <Setter Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Style for photo tag links -->
    <Style x:Key="PhotoTagLink" TargetType="Hyperlink">
        <Setter Property="Foreground" Value="#AAAAAA"/>
        <Setter Property="TextDecorations" Value="None"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#DDDDDD"/>
                <Setter Property="TextDecorations" Value="Underline"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Foreground" Value="#DDDDDD"/>
                <Setter Property="TextDecorations" Value="Underline"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- The panel template for listing the photo's tags -->
    <ItemsPanelTemplate x:Key="PhotoTagPanel">
        <WrapPanel IsItemsHost="True"/>
    </ItemsPanelTemplate>

    <!-- Control template for the photo viewer toolbar -->
    <Style x:Key="PhotoToolbar" TargetType="{x:Type FacebookClient:PhotoViewerToolbarControl}">
        <!-- Default styles for controls inside the toolbar as style resources -->
        <Style.Resources>
            <!-- Control template for toolbar buttons -->
            <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{StaticResource Background_PhotoViewerDefault}" Padding="4,0">
                                <Border
                  x:Name="Border"
                  HorizontalAlignment="Center"
                  Margin="1"
                  CornerRadius="3"
                  Opacity="0.6">
                                    <ContentPresenter Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"/>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource Background_PhotoViewerOver}"/>
                                    <Setter TargetName="Border" Property="Opacity" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource Background_PhotoViewerOver}"/>
                                    <Setter TargetName="Border" Property="Opacity" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource Background_PhotoViewerPressed}"/>
                                    <Setter TargetName="Border" Property="Opacity" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Opacity" Value="0.2"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- Control template for toolbar togglebuttons -->
            <Style x:Key="{x:Type ToggleButton}" TargetType="{x:Type ToggleButton}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Background="{StaticResource Background_PhotoViewerDefault}" Padding="4,0">
                                <Border
                  x:Name="Border"
                  Margin="1"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="2"
                  CornerRadius="3"
                  Opacity="0.6">
                                    <ContentPresenter Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"/>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource Background_PhotoViewerOver}"/>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Background_PhotoViewerOver}"/>
                                    <Setter TargetName="Border" Property="Opacity" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource Background_PhotoViewerOver}"/>
                                    <Setter TargetName="Border" Property="Opacity" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource Background_PhotoViewerPressed}"/>
                                    <Setter TargetName="Border" Property="Opacity" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource Background_PhotoViewerChecked}"/>
                                    <Setter TargetName="Border" Property="Opacity" Value="1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- Control template for toolbar separator -->
            <Style x:Key="{x:Type Separator}" TargetType="{x:Type Separator}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <StackPanel>
                                <StackPanel Height="11" ClipToBounds="True">
                                    <Border Height="10" Background="{StaticResource Background_PhotoViewerDefault}" CornerRadius="4">
                                        <Border.RenderTransform>
                                            <TranslateTransform Y="-5"/>
                                        </Border.RenderTransform>
                                    </Border>
                                </StackPanel>
                                <StackPanel Height="5" ClipToBounds="True">
                                    <Border Height="10" Background="{StaticResource Background_PhotoViewerDefault}" CornerRadius="4"/>
                                </StackPanel>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type FacebookClient:PhotoViewerToolbarControl}">
                    <StackPanel>
                        <!-- Header (bottom half of a separator) -->
                        <StackPanel Height="5" ClipToBounds="True">
                            <Border Height="10" Background="{StaticResource Background_PhotoViewerDefault}" CornerRadius="4"/>
                        </StackPanel>
                        <ItemsPresenter/>
                        <!-- Footer (top half of a separator) -->
                        <StackPanel Height="5" ClipToBounds="True">
                            <Border Height="10" Background="{StaticResource Background_PhotoViewerDefault}" CornerRadius="4">
                                <Border.RenderTransform>
                                    <TranslateTransform Y="-5"/>
                                </Border.RenderTransform>
                            </Border>
                        </StackPanel>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Control template for the photo display control -->
    <Style TargetType="{x:Type FacebookClient:PhotoDisplayControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type FacebookClient:PhotoDisplayControl}">
                    <Canvas x:Name="PART_ManipulationCanvas">
                        <ContentControl x:Name="PART_PhotoFrameControl"
                Template="{DynamicResource StandardPhotoChromeContentControlTemplate}" 
                Padding="8" >
                            <ClientManagerControls:FacebookImageControl x:Name="PART_PhotoImage"
                  FacebookImage="{Binding FacebookPhoto.Image}" 
                  FacebookImageDimensions="Big">
                                <ClientManagerControls:FacebookImageControl.Template>
                                    <ControlTemplate TargetType="{x:Type ClientManagerControls:FacebookImageControl}">
                                        <Image Source="{TemplateBinding ImageSource}"/>
                                    </ControlTemplate>
                                </ClientManagerControls:FacebookImageControl.Template>
                                <ClientManagerControls:FacebookImageControl.ContextMenu>
                                    <ContextMenu StaysOpen="true">
                                        <MenuItem Command="FacebookClient:PhotoViewerControl.SetAsDesktopBackgroundCommand" CommandParameter="{Binding}" Header="Set as Desktop _Background"/>
                                        <MenuItem Command="FacebookClient:PhotoViewerControl.SavePhotoAsCommand" CommandParameter="{Binding}" Header="_Save..."/>
                                        <MenuItem Command="FacebookClient:PhotoViewerControl.SaveAlbumCommand" CommandParameter="{Binding}" Header="Save _Album..."/>
                                        <Separator/>
                                        <MenuItem Command="ApplicationCommands.Print" Header="_Print..."/>
                                        <Separator/>
                                        <MenuItem
                      Command="FacebookClient:PhotoDisplayControl.ZoomPhotoInCommand"
                      CommandParameter="{Binding}"
                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=.}"
                      Header="Zoom _In"
                      InputGestureText="Ctrl++"/>
                                        <MenuItem
                      Command="FacebookClient:PhotoDisplayControl.ZoomPhotoOutCommand"
                      CommandParameter="{Binding}"
                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=.}"
                      Header="Zoom _Out"
                      InputGestureText="Ctrl+-"/>
                                    </ContextMenu>
                                </ClientManagerControls:FacebookImageControl.ContextMenu>
                            </ClientManagerControls:FacebookImageControl>
                        </ContentControl>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Storyboard x:Key="PhotoNavigationButtonMouseOverStoryboard">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IsMouseOver" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00.200" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Normal" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00.200" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Disabled" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00.200" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00.200" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="PhotoNavigationButtonPressedStoryboard">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00.200" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IsMouseOver" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00.200" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Normal" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00.200" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Disabled" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00.200" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="PhotoNavigationButtonNormalStoryboard">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Normal" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00.200" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Disabled" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00.200" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IsMouseOver" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00.200" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00.200" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="PhotoNavigationButtonDisabledStoryboard">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Normal" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00.000" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Disabled" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00.000" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IsMouseOver" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00.000" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00.000" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <!--Control template for toggle buttons on the bottom left hand corner of photo viewer-->
    <ControlTemplate x:Key="PhotoToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Grid Margin="10,5" Cursor="Hand">
            <Rectangle
        x:Name="ButtonBackground"
        Fill="#6682AFFE"
        Stroke="White"
        StrokeThickness="1">
                <Rectangle.OpacityMask>
                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                        <GradientStop Offset="0.95" Color="#00000000"/>
                        <GradientStop Color="White"/>
                    </LinearGradientBrush>
                </Rectangle.OpacityMask>
            </Rectangle>
            <TextBlock
                x:Name="ContentTextblock"
                HorizontalAlignment="Left"
                Margin="10,3,40,3"
                VerticalAlignment="Center"
                FontFamily="{DynamicResource SansSerifFont}"
                FontSize="{DynamicResource LargeFontSize1}"
                Text="{TemplateBinding Content}"
                TextWrapping="Wrap"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="ButtonBackground" Property="StrokeThickness" Value="1"/>
                <Setter TargetName="ContentTextblock" Property="Foreground" Value="White"/>
                <Setter TargetName="ButtonBackground" Property="Fill" Value="#FF0076A8"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ButtonBackground" Property="StrokeThickness" Value="3"/>
                <Setter TargetName="ContentTextblock" Property="Foreground" Value="White"/>
                <Setter TargetName="ButtonBackground" Property="Fill" Value="#FF0076A8"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="False"/>
                    <Condition Property="IsMouseOver" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="ButtonBackground" Property="StrokeThickness" Value="1"/>
                    <Setter TargetName="ContentTextblock" Property="Foreground" Value="Black"/>
                    <Setter TargetName="ButtonBackground" Property="Fill" Value="#6682AFFE"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="TopToolbarButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Visibility" Value="{Binding Path=NavigationUIVisibility, RelativeSource={RelativeSource AncestorType={x:Type FacebookClient:MainWindow}}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                          x:Name="hover"
                          Background="{DynamicResource PhotoViewerToolbarButtonSelectedBrush}"
                          BorderBrush="{DynamicResource PhotoViewerToolbarButtonSelectedBrush}"
                          BorderThickness="1"
                          CornerRadius="3"
                          Opacity="0"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                  Duration="0:0:0.3"
                                  Storyboard.TargetName="hover"
                                  Storyboard.TargetProperty="Opacity"
                                  To="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                  Duration="0:0:0.3"
                                  Storyboard.TargetName="hover"
                                  Storyboard.TargetProperty="Opacity"
                                  To="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AlbumStripStyle" TargetType="{x:Type Control}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <!-- FilmStripPanel requires a non-Infinite width.  Putting it in a grid like this is sufficient to get it to calculate correctly. -->
                    <Grid DockPanel.Dock="Bottom">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="FilmStripBlurEffectArea"
                  Background="{DynamicResource FriendBarBackgroundBrush}"
                  BorderThickness="0,2,0,0"
                  BorderBrush="{DynamicResource FriendBarBorderBrush}"
                  Height="112">
                            <Border.OpacityMask>
                                <LinearGradientBrush StartPoint="0,.5" EndPoint="1,.5">
                                    <GradientStop Offset="0" Color="Transparent"/>
                                    <GradientStop Offset=".05" Color="#88000000"/>
                                    <GradientStop Offset=".15" Color="Black"/>
                                    <GradientStop Offset=".85" Color="Black"/>
                                    <GradientStop Offset=".95" Color="#88000000"/>
                                    <GradientStop Offset="1" Color="Transparent"/>
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                            <FacebookClient:FilmStripControl
                x:Name="PART_FilmStrip"
                Background="Transparent"
                Focusable="False"
                ItemContainerStyle="{StaticResource FilmStripItemStyle}"
                VerticalContentAlignment="Center"
                ItemHeight="80"
                ItemsPanel="{StaticResource FilmStripPanel}"
                ItemsSource="{Binding Source={x:Static ClientManager:ServiceProvider.ViewManager}, Path=ActivePhotoAlbum.Photos}"
                ItemTemplate="{StaticResource FilmStripItemTemplate}"
                Padding="0"
                ScrollViewer.CanContentScroll="True"
                SelectedItem="{Binding Source={x:Static ClientManager:ServiceProvider.ViewManager}, Path=ActivePhoto, Mode=OneWay}"
                Style="{StaticResource FilmStripStyle}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PhotoViewerToolbarStyle" TargetType="{x:Type Control}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <StackPanel
              x:Name="ToolbarButtons"
              HorizontalAlignment="Center"
              Margin="10"
              Orientation="Horizontal">
                        <Button
                Command="FacebookClient:PhotoDisplayControl.ZoomPhotoOutCommand"
                CommandParameter="{Binding}"
                CommandTarget="{Binding ElementName=PART_PhotoDisplay}"
                Style="{DynamicResource TopToolbarButton}"
                ToolTip="Zoom the photo out">
                            <Rectangle Margin="4 0" Height="16" Width="16" Fill="{DynamicResource ZoomOutDrawingBrush}"/>
                        </Button>

                        <Button
                Command="FacebookClient:PhotoDisplayControl.FitPhotoToWindowCommand"
                CommandParameter="{Binding}"
                CommandTarget="{Binding ElementName=PART_PhotoDisplay}"
                Style="{DynamicResource TopToolbarButton}"
                ToolTip="Fit the photo to the window size"
                Visibility="{Binding Path=NavigationUIVisibility, RelativeSource={RelativeSource AncestorType={x:Type FacebookClient:MainWindow}}}">
                            <Rectangle Height="16" Width="16" Fill="{DynamicResource ZoomMagnifyingGlassToolbarDrawingBrush}"/>
                        </Button>
                        <Button
                Command="FacebookClient:PhotoDisplayControl.ZoomPhotoInCommand"
                CommandParameter="{Binding}"
                CommandTarget="{Binding ElementName=PART_PhotoDisplay}"
                Style="{DynamicResource TopToolbarButton}"
                ToolTip="Zoom the photo in">
                            <Rectangle Height="16" Width="16" Fill="{DynamicResource ZoomInDrawingBrush}"/>
                        </Button>
                        <Rectangle
                Width="1"
                Height="17"
                Margin="5,0,5,0"
                VerticalAlignment="Center"
                Fill="#203b5998"
                SnapsToDevicePixels="True"
                Visibility="{Binding Path=NavigationUIVisibility, RelativeSource={RelativeSource AncestorType={x:Type FacebookClient:MainWindow}}}"/>
                        <Button
                Margin="0,0,3,0"
                Command="ApplicationCommands.Print"
                Style="{DynamicResource TopToolbarButton}"
                ToolTip="Print the photo">
                            <Rectangle Height="16" Width="16" Fill="{DynamicResource PrinterToolbarDrawingBrush}"/>
                        </Button>
                        <Button
                Command="FacebookClient:PhotoViewerControl.SavePhotoAsCommand"
                CommandParameter="{Binding}"
                Style="{DynamicResource TopToolbarButton}"
                ToolTip="Save the photo">
                            <Rectangle Height="16" Width="16" Fill="{DynamicResource SaveDiskToolbarDrawingBrush}" />
                        </Button>
                        <Rectangle
                Width="1"
                Height="17"
                Margin="5,0,5,0"
                VerticalAlignment="Center"
                Fill="#203b5998"
                SnapsToDevicePixels="True"
                Visibility="{Binding Path=NavigationUIVisibility, RelativeSource={RelativeSource AncestorType={x:Type FacebookClient:MainWindow}}}"/>
                        <Button 
                Command="FacebookClient:PhotoViewerControl.StartSlideShowCommand" 
                CommandParameter="{Binding}" 
                Style="{DynamicResource TopToolbarButton}" 
                ToolTip="Slide Show">
                            <Rectangle Height="16" Width="16" Fill="{DynamicResource SlideShowToolbarDrawingBrush}"/>
                        </Button>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PhotoDescriptionStyle" TargetType="{x:Type Control}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <ScrollViewer x:Name="PhotoDescription"
              DockPanel.Dock="Bottom"
              MaxHeight="60"
              MaxWidth="800"
              HorizontalAlignment="Center"
              Margin="10"
              VerticalAlignment="Bottom"
              Focusable="False"
              HorizontalScrollBarVisibility="Disabled"
              Style="{StaticResource MainScrollViewerStyle}"
              VerticalScrollBarVisibility="Auto"
              Visibility="{Binding Path=NavigationUIVisibility, RelativeSource={RelativeSource AncestorType={x:Type FacebookClient:MainWindow}}}">
                        <Border VerticalAlignment="Center" Background="Transparent" Padding="10">
                            <StackPanel>
                                <TextBlock
                  VerticalAlignment="Top"
                  FontFamily="{DynamicResource SansSerifFont}"
                  FontSize="{DynamicResource MiddleFontSize}"
                  FontWeight="Medium"
                  TextWrapping="Wrap">
                  <FacebookClient:HyperlinkTextContent Foreground="{DynamicResource PhotoCaptionForeground}" Text="{Binding Path=FacebookPhoto.Caption}"/></TextBlock>
                                <ItemsControl ItemsPanel="{StaticResource PhotoTagPanel}" ItemsSource="{Binding Path=FacebookPhoto.Tags}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <FacebookClient:FacebookPhotoTagControl/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </Border>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- PhotoViewer very narrow control template -->
    <ControlTemplate x:Key="PhotoViewerTemplate_VeryNarrow" TargetType="{x:Type FacebookClient:PhotoViewerControl}">
        <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=.}">
            <!-- Place the photo under all other controls, but allow it to fill the full page. -->
            <Grid x:Name="PART_PhotoDisplayGrid">
                <FacebookClient:PhotoDisplayControl x:Name="PART_PhotoDisplay"
            FacebookPhoto="{TemplateBinding FacebookPhoto}" 
            RenderTransformOrigin="0.5,0.5"/>
                <FacebookClient:PhotoTaggerControl x:Name="PART_PhotoTaggerControl"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            PhotoAlbum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FacebookPhoto.Album}"
            Visibility="Collapsed"/>
                <FacebookClient:TagTarget x:Name="PART_TagTargetElement"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Visibility="Collapsed"/>
            </Grid>

            <DockPanel>
                <Control DockPanel.Dock="Bottom" Style="{StaticResource AlbumStripStyle}"/>

                <Control DockPanel.Dock="Top" Style="{StaticResource PhotoViewerToolbarStyle}"/>

                <Control DockPanel.Dock="Bottom" Style="{StaticResource PhotoDescriptionStyle}"/>

                <Control x:Name="PART_FitPhotoFrame" MinHeight="180" MinWidth="200"/>
            </DockPanel>
        </Grid>
    </ControlTemplate>

    <!-- PhotoViewer narrow control template -->
    <ControlTemplate x:Key="PhotoViewerTemplate_Narrow" TargetType="{x:Type FacebookClient:PhotoViewerControl}">
        <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=.}">
            <!-- Place the photo under all other controls, but allow it to fill the full page. -->
            <Grid x:Name="PART_PhotoDisplayGrid">
                <FacebookClient:PhotoDisplayControl x:Name="PART_PhotoDisplay"
            FacebookPhoto="{TemplateBinding FacebookPhoto}" 
            RenderTransformOrigin="0.5,0.5"/>
                <FacebookClient:PhotoTaggerControl x:Name="PART_PhotoTaggerControl"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            PhotoAlbum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FacebookPhoto.Album}"
            Visibility="Collapsed"/>
                <FacebookClient:TagTarget x:Name="PART_TagTargetElement"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Visibility="Collapsed"/>
            </Grid>

            <DockPanel>
                <Control DockPanel.Dock="Bottom" Style="{StaticResource AlbumStripStyle}"/>

                <Control DockPanel.Dock="Top" Style="{StaticResource PhotoViewerToolbarStyle}"/>
                <!-- photo contact info and comments -->
                <DockPanel 
                    DockPanel.Dock="Left"
                    VerticalAlignment="Top"
                    MaxWidth="220"
                    HorizontalAlignment="Left"
                    Visibility="{Binding Path=NavigationUIVisibility, RelativeSource={RelativeSource AncestorType={x:Type FacebookClient:MainWindow}}}">
                    <TextBlock
              DockPanel.Dock="Top"
              Margin="0,20,0,0"
              VerticalAlignment="Top"
              DataContext="{Binding Source={x:Static ClientManager:ServiceProvider.ViewManager}, Path=ActivePhotoAlbum.Owner}"
              Style="{StaticResource ProfileNameTextBlockStyle}"
              TextWrapping="Wrap">
            <Hyperlink Click="OnNavigateToContentButtonClicked" ClientManagerView:ViewManager.NavigationContent="{Binding}" >
              <FacebookClient:BindableRun Text="{Binding Name}"/>
            </Hyperlink>
            <InlineUIContainer>
              <Grid HorizontalAlignment="Left" Margin="6,0,0,0" VerticalAlignment="Center">
                <Rectangle x:Name="Away" Fill="{DynamicResource StatusAwayDrawingBrush}" Width="14" Height="14" Visibility="Collapsed" />
                <Rectangle x:Name="Online" Fill="{DynamicResource StatusOnlineDrawingBrush}" Width="14" Height="14" Visibility="Collapsed" />
              </Grid>
            </InlineUIContainer></TextBlock>
                    <StackPanel DockPanel.Dock="Top" Margin="0,10,0,0">
                        <Button
                Command="{Binding Source={x:Static ClientManager:ServiceProvider.ViewManager}, Path=NavigationCommands.NavigateToContentCommand}" 
                CommandParameter="{Binding Source={x:Static ClientManager:ServiceProvider.ViewManager}, Path=ActivePhotoAlbum}" 
                Content="{Binding Source={x:Static ClientManager:ServiceProvider.ViewManager}, Path=ActivePhotoAlbum.Title}">
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <TextBlock x:Name="ContactTextBlock"
                      Cursor="Hand"
                      FontFamily="{DynamicResource SansSerifFont}"
                      FontSize="{DynamicResource LargeFontSize3}"
                      FontWeight="Regular"
                      Foreground="#000000"
                      Text="{TemplateBinding Content}"
                      TextWrapping="Wrap"/>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="ContactTextBlock" Property="TextDecorations" Value="Underline"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter TargetName="ContactTextBlock" Property="TextDecorations" Value="{x:Null}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                        <StackPanel Margin="0,5,0,0" Orientation="Horizontal">
                            <TextBlock
                  VerticalAlignment="Center"
                  FontFamily="{DynamicResource SansSerifFont}"
                  FontSize="{DynamicResource MiddleFontSize}"
                  FontWeight="Light"
                  Foreground="Black"
                  Text="{Binding Source={x:Static ClientManager:ServiceProvider.ViewManager}, Path=ActivePhotoAlbum.Photos.Count, StringFormat=\{0\} photos}"/>
                            <TextBlock
                  Margin="5,0"
                  VerticalAlignment="Center"
                  FontFamily="{DynamicResource SansSerifFont}"
                  FontSize="{DynamicResource SmallFontSize1}"
                  FontWeight="Light"
                  Foreground="Black"
                  Opacity=".56"
                  Text="{Binding Source={x:Static ClientManager:ServiceProvider.ViewManager}, Path=ActivePhotoAlbum.Created, Converter={StaticResource DateTimeConverter}}"/>
                        </StackPanel>
                    </StackPanel>
                    <ScrollViewer
              VerticalAlignment="Top"
              VerticalScrollBarVisibility="Auto" >
                        <Border Background="{DynamicResource NewsFeedCommentBackgroundBrush}" CornerRadius="6">
                            <StackPanel>
                                <ItemsControl x:Name="CommentsList"
                  Margin="10,0"
                  ItemsPanel="{StaticResource VirtualizedItemsPanelTemplate}"
                  ItemsSource="{Binding FacebookPhoto.Comments}"
                  ItemTemplate="{StaticResource NewsFeedCommentTemplate}"/>
                                <StackPanel Margin="7,5,0,7">
                                    <FacebookClient:CommandTextBox x:Name="CommentTextBox" Margin="5,0" Panel.ZIndex="1" CommitCommand="{Binding Source={x:Static ClientManager:ServiceProvider.ViewManager}, Path=ActionCommands.AddCommentToPhotoCommand}" FontSize="{DynamicResource MiddleFontSize}" SpellCheck.IsEnabled="True" TextWrapping="Wrap">
                                        <FacebookClient:CommandTextBox.Style>
                                            <Style BasedOn="{StaticResource CommentTextBoxStyle}" TargetType="{x:Type FacebookClient:CommandTextBox}">
                                                <Setter Property="BannerText" Value="Add to the conversation" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=CommentsList, Path=HasItems}" Value="False">
                                                        <Setter Property="BannerText" Value="Start a conversation" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </FacebookClient:CommandTextBox.Style>
                                        <FacebookClient:CommandTextBox.CommitCommandParameter>
                                            <MultiBinding Converter="{StaticResource MultiAggregator}">
                                                <Binding Path="FacebookPhoto" />
                                                <Binding ElementName="CommentTextBox" Path="Text" />
                                            </MultiBinding>
                                        </FacebookClient:CommandTextBox.CommitCommandParameter>
                                    </FacebookClient:CommandTextBox>
                                    <Button Style="{DynamicResource StandardButtonStyle}" IsEnabled="{Binding ElementName=CommentTextBox, Path=Text, Converter={StaticResource IsStringNullOrWhitespaceConverter}, ConverterParameter=Inverse}" Margin="10,4,4,0" Height="22" HorizontalAlignment="Right" Panel.ZIndex="0" Command="{x:Static FacebookClient:CommandTextBox.DoCommitCommand}" CommandTarget="{Binding ElementName=CommentTextBox}" Content="Comment" FontSize="{DynamicResource MiddleFontSize}">
                                        <Button.CommandParameter>
                                            <MultiBinding Converter="{StaticResource MultiAggregator}">
                                                <Binding Path="FacebookPhoto" />
                                                <Binding ElementName="CommentTextBox" Path="Text" />
                                            </MultiBinding>
                                        </Button.CommandParameter>
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                        </Border>
                    </ScrollViewer>
                </DockPanel>

                <Control DockPanel.Dock="Bottom" Style="{StaticResource PhotoDescriptionStyle}"/>

                <Control x:Name="PART_FitPhotoFrame" MinHeight="180" MinWidth="200"/>
            </DockPanel>
        </Grid>
    </ControlTemplate>

    <!-- PhotoViewer wide control template -->
    <ControlTemplate x:Key="PhotoViewerTemplate_Wide" TargetType="{x:Type FacebookClient:PhotoViewerControl}">
        <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=.}">
            <!-- Place the photo under all other controls, but allow it to fill the full page. -->
            <Grid x:Name="PART_PhotoDisplayGrid">
                <FacebookClient:PhotoDisplayControl x:Name="PART_PhotoDisplay"
            FacebookPhoto="{TemplateBinding FacebookPhoto}" 
            RenderTransformOrigin="0.5,0.5"/>
                <FacebookClient:PhotoTaggerControl x:Name="PART_PhotoTaggerControl"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            PhotoAlbum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FacebookPhoto.Album}"
            Visibility="Collapsed"/>
                <FacebookClient:TagTarget x:Name="PART_TagTargetElement"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Visibility="Collapsed"/>
            </Grid>

            <DockPanel>
                <!-- Filmstrip -->
                <Control DockPanel.Dock="Bottom" Style="{StaticResource AlbumStripStyle}"/>

                <!-- photo contact info -->
                <StackPanel 
            DockPanel.Dock="Left"
            Orientation="Vertical" 
            Width="200" 
            Margin="10"
            Visibility="{Binding Path=NavigationUIVisibility, RelativeSource={RelativeSource AncestorType={x:Type FacebookClient:MainWindow}}}"
            DataContext="{Binding Source={x:Static ClientManager:ServiceProvider.ViewManager}, Path=ActivePhotoAlbum}">
                    <Button x:Name="ActivityButton" 
              VerticalAlignment="Top"
              Style="{StaticResource AnimatedItemButton}" 
              Margin="10"
              Click="OnNavigateToContentButtonClicked"
              HorizontalAlignment="Left" 
              ClientManagerView:ViewManager.NavigationContent="{Binding Owner}" 
              RenderTransformOrigin="0.5,0.5">
                        <Button.RenderTransform>
                            <TransformGroup>
                                <RotateTransform Angle="-6"/>
                            </TransformGroup>
                        </Button.RenderTransform>
                        <Grid Width="106" Height="106">
                            <Image Name="Placeholder" Source="pack://application:,,,/Resources/Images/avatar_background.png"/>
                            <ClientManagerControls:FacebookImageControl FacebookImage="{Binding Owner.Image}" FacebookImageDimensions="Big">
                                <ClientManagerControls:FacebookImageControl.Template>
                                    <ControlTemplate TargetType="{x:Type ClientManagerControls:FacebookImageControl}">
                                        <Border Margin="4,4,4.5,6">
                                            <Border.Background>
                                                <ImageBrush Stretch="UniformToFill" ImageSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageSource}" />
                                            </Border.Background>
                                        </Border>
                                    </ControlTemplate>
                                </ClientManagerControls:FacebookImageControl.Template>
                            </ClientManagerControls:FacebookImageControl>
                        </Grid>
                    </Button>
                    <TextBlock FontFamily="{DynamicResource SansSerifFont}" FontWeight="Bold" FontSize="{DynamicResource LargeFontSize3}" Foreground="{DynamicResource ActivityPostUserNameForeground}" TextWrapping="Wrap">
          <Hyperlink Click="OnNavigateToContentButtonClicked" ClientManagerView:ViewManager.NavigationContent="{Binding Owner}">
            <FacebookClient:BindableRun Text="{Binding Owner.Name}"/>
          </Hyperlink>
                    </TextBlock>
                    <TextBlock FontFamily="{DynamicResource SansSerifFont}" FontWeight="Regular" FontSize="{DynamicResource LargeFontSize3}" Foreground="{DynamicResource PhotoViewerAlbumNameForeground}" TextWrapping="Wrap">
            <Hyperlink Click="OnNavigateToContentButtonClicked" ClientManagerView:ViewManager.NavigationContent="{Binding}">
              <FacebookClient:BindableRun Text="{Binding Title}"/>
            </Hyperlink>
                    </TextBlock>

                    <TextBlock Foreground="#8F8F8F" FontSize="{DynamicResource SmallFontSize1}" FontFamily="{DynamicResource SansSerifFont}" FontWeight="Light">
            <TextBlock.Text>
              <Binding StringFormat="{}Last updated {0}" Path="LastModified" Converter="{StaticResource DateTimeConverter}"/>
            </TextBlock.Text>
                    </TextBlock>
                    <TextBlock Foreground="#8F8F8F" FontSize="{DynamicResource SmallFontSize1}" FontFamily="{DynamicResource SansSerifFont}" FontWeight="Light">
          <TextBlock.Text>
            <Binding StringFormat="{}{0} photos" Path="Photos.Count" />
          </TextBlock.Text>
                    </TextBlock>
                </StackPanel>

                <!-- Comments -->
                <ScrollViewer
            DockPanel.Dock="Right"
            Margin="0,10,10,10"
            Width="250"
            VerticalAlignment="Center"
            VerticalScrollBarVisibility="Auto"
            Visibility="{Binding Path=NavigationUIVisibility, RelativeSource={RelativeSource AncestorType={x:Type FacebookClient:MainWindow}}}">
                    <Border Background="{DynamicResource NewsFeedCommentBackgroundBrush}" CornerRadius="6">
                        <StackPanel>
                            <ItemsControl
                x:Name="CommentsList"
                Margin="10,0"
                ItemsPanel="{StaticResource VirtualizedItemsPanelTemplate}"
                ItemsSource="{Binding FacebookPhoto.Comments}"
                ItemTemplate="{StaticResource NewsFeedCommentTemplate}"/>
                            <StackPanel Margin="7,5,0,7">
                                <FacebookClient:CommandTextBox x:Name="CommentTextBox" Margin="5,0" Panel.ZIndex="1" CommitCommand="{Binding Source={x:Static ClientManager:ServiceProvider.ViewManager}, Path=ActionCommands.AddCommentToPhotoCommand}" FontSize="{DynamicResource MiddleFontSize}" SpellCheck.IsEnabled="True" TextWrapping="Wrap">
                                    <FacebookClient:CommandTextBox.Style>
                                        <Style BasedOn="{StaticResource CommentTextBoxStyle}" TargetType="{x:Type FacebookClient:CommandTextBox}">
                                            <Setter Property="BannerText" Value="Add to the conversation" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=CommentsList, Path=HasItems}" Value="False">
                                                    <Setter Property="BannerText" Value="Start a conversation" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </FacebookClient:CommandTextBox.Style>
                                    <FacebookClient:CommandTextBox.CommitCommandParameter>
                                        <MultiBinding Converter="{StaticResource MultiAggregator}">
                                            <Binding Path="FacebookPhoto" />
                                            <Binding ElementName="CommentTextBox" Path="Text" />
                                        </MultiBinding>
                                    </FacebookClient:CommandTextBox.CommitCommandParameter>
                                </FacebookClient:CommandTextBox>
                                <Button Style="{DynamicResource StandardButtonStyle}" IsEnabled="{Binding ElementName=CommentTextBox, Path=Text, Converter={StaticResource IsStringNullOrWhitespaceConverter}, ConverterParameter=Inverse}" Margin="10,4,4,0" Height="22" HorizontalAlignment="Right" Panel.ZIndex="0" Command="{x:Static FacebookClient:CommandTextBox.DoCommitCommand}" CommandTarget="{Binding ElementName=CommentTextBox}" Content="Comment" FontSize="{DynamicResource MiddleFontSize}">
                                    <Button.CommandParameter>
                                        <MultiBinding Converter="{StaticResource MultiAggregator}">
                                            <Binding Path="FacebookPhoto" />
                                            <Binding ElementName="CommentTextBox" Path="Text" />
                                        </MultiBinding>
                                    </Button.CommandParameter>
                                </Button>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </ScrollViewer>

                <Control DockPanel.Dock="Top" Style="{StaticResource PhotoViewerToolbarStyle}"/>

                <!-- Photo description/tags -->
                <Control DockPanel.Dock="Bottom" Style="{StaticResource PhotoDescriptionStyle}"/>

                <Control x:Name="PART_FitPhotoFrame" MinHeight="180" MinWidth="200" />
            </DockPanel>
        </Grid>
    </ControlTemplate>

    <ClientManagerControls:SizeControlTemplateCollection x:Key="PhotoViewerTemplateCollection">
        <ClientManagerControls:SizeControlTemplate MaxWidth="700"                Template="{StaticResource PhotoViewerTemplate_VeryNarrow}"/>
        <ClientManagerControls:SizeControlTemplate MaxWidth="975" MinWidth="700" Template="{StaticResource PhotoViewerTemplate_Narrow}"/>
        <ClientManagerControls:SizeControlTemplate                MinWidth="975" Template="{StaticResource PhotoViewerTemplate_Wide}"/>
    </ClientManagerControls:SizeControlTemplateCollection>

    <Style TargetType="{x:Type FacebookClient:PhotoViewerControl}">
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Templates" Value="{StaticResource PhotoViewerTemplateCollection}"/>
    </Style>

</ClientManagerView:EventResourceDictionary>
