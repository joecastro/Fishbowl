<Window x:Class="FacebookClient.MiniModeWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Facebook="clr-namespace:Contigo;assembly=Contigo"
    xmlns:FacebookClient="clr-namespace:FacebookClient"
    xmlns:ClientManager="clr-namespace:ClientManager"
    xmlns:ClientManagerControls="clr-namespace:ClientManager.Controls"
    xmlns:ClientManagerView="clr-namespace:ClientManager.View"
    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Microsoft.Windows.Shell"
    x:Name="MainWindow"
    FacebookClient:MiniModeWindow.NonGlassBackground="{DynamicResource FacebookBlueBrush}"
    Title="fishbowl" 
    ResizeMode="CanMinimize"
    WindowStyle="None"
    Width="280" Height="180"
    Topmost="True"
    AllowDrop="True"
    MouseLeftButtonDown="_OnMouseDown" 
    PreviewKeyDown="Grid_PreviewKeyDown" 
    MouseWheel="OnWindow_MouseWheel"
    IsVisibleChanged="_IsVisibleChanged">
  <shell:TaskbarItemInfo.TaskbarItemInfo>
    <shell:TaskbarItemInfo 
        Overlay="{Binding ElementName=NotificationCountControl, Path=ImageSource}"
        Description="{Binding ElementName=PART_ZapScroller2, Path=CurrentItem.Message}" ThumbnailClipMargin="0,0,0,33">
      <shell:TaskbarItemInfo.ThumbButtonInfos>
        <shell:ThumbButtonInfo Command="{Binding ElementName=PART_ZapScroller2, Path=PreviousCommand}">
          <shell:ThumbButtonInfo.ImageSource>
            <DrawingImage Drawing="{DynamicResource LeftArrowLightToolbarDrawing}"/>
          </shell:ThumbButtonInfo.ImageSource>
        </shell:ThumbButtonInfo>
        <shell:ThumbButtonInfo Command="{Binding ElementName=PART_ZapScroller2, Path=NextCommand}">
          <shell:ThumbButtonInfo.ImageSource>
            <DrawingImage Drawing="{DynamicResource RightArrowLightToolbarDrawing}"/>
          </shell:ThumbButtonInfo.ImageSource>
        </shell:ThumbButtonInfo>
      </shell:TaskbarItemInfo.ThumbButtonInfos>
    </shell:TaskbarItemInfo>
  </shell:TaskbarItemInfo.TaskbarItemInfo>

  <Window.Resources>
    <FacebookClient:AddConverter x:Key="AddConverter" />

    <Style x:Key="RestoreButtonStyle" TargetType="{x:Type Button}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Grid Height="18">
              <Border x:Name="CloseButtonBorder" BorderBrush="Black" BorderThickness="1" CornerRadius="0,0,0,2" Height="Auto" Width="22" Background="Transparent">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                  <TextBlock x:Name="CloseText" Margin="3,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="18" FontFamily="Webdings" Foreground="Black" Text="5" />
                </StackPanel>
              </Border>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="IsFocused" Value="True" />
              <Trigger Property="IsDefaulted" Value="True" />
              <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect" TargetName="CloseButtonBorder">
                  <Setter.Value>
                    <DropShadowEffect Color="White" BlurRadius="2" ShadowDepth="0" />
                  </Setter.Value>
                </Setter>
                <Setter Property="Background" TargetName="CloseButtonBorder">
                  <Setter.Value>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                      <GradientStop Color="Firebrick" Offset="0" />
                      <GradientStop Color="#FFEBEBEB" Offset="0.2" />
                      <GradientStop Color="#FFDDDDDD" Offset="0.2" />
                      <GradientStop Color="Firebrick" Offset="1" />
                    </LinearGradientBrush>
                  </Setter.Value>
                </Setter>
                <Setter Property="Foreground" TargetName="CloseText" Value="White" />
              </Trigger>
              <Trigger Property="IsPressed" Value="True">
                <Setter Property="Effect" TargetName="CloseButtonBorder">
                  <Setter.Value>
                    <DropShadowEffect Color="White" BlurRadius="2" ShadowDepth="0" />
                  </Setter.Value>
                </Setter>
                <Setter Property="Background" TargetName="CloseButtonBorder">
                  <Setter.Value>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                      <GradientStop Color="DarkRed" Offset="0" />
                      <GradientStop Color="#FFEBEBEB" Offset="0.2" />
                      <GradientStop Color="#FFDDDDDD" Offset="0.2" />
                      <GradientStop Color="DarkRed" Offset="1" />
                    </LinearGradientBrush>
                  </Setter.Value>
                </Setter>
              </Trigger>
              <Trigger Property="IsEnabled" Value="False" />
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="Foreground" Value="DarkBlue" />
    </Style>

    <Style x:Key="MinimizeButtonStyle" TargetType="{x:Type Button}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Grid Height="18">
              <Border x:Name="CloseButtonBorder" BorderBrush="Black" BorderThickness="1" CornerRadius="0,0,2,0" Height="Auto" Width="22" Background="Transparent">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                  <TextBlock x:Name="CloseText" Margin="3,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="18" FontFamily="Webdings" Foreground="Black" Text="6" />
                </StackPanel>
              </Border>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="IsFocused" Value="True" />
              <Trigger Property="IsDefaulted" Value="True" />
              <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect" TargetName="CloseButtonBorder">
                  <Setter.Value>
                    <DropShadowEffect Color="White" BlurRadius="2" ShadowDepth="0" />
                  </Setter.Value>
                </Setter>
                <Setter Property="Background" TargetName="CloseButtonBorder">
                  <Setter.Value>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                      <GradientStop Color="Indigo" Offset="0" />
                      <GradientStop Color="#FFEBEBEB" Offset="0.2" />
                      <GradientStop Color="#FFDDDDDD" Offset="0.2" />
                      <GradientStop Color="Indigo" Offset="1" />
                    </LinearGradientBrush>
                  </Setter.Value>
                </Setter>
                <Setter Property="Foreground" TargetName="CloseText" Value="White" />
              </Trigger>
              <Trigger Property="IsPressed" Value="True">
                <Setter Property="Effect" TargetName="CloseButtonBorder">
                  <Setter.Value>
                    <DropShadowEffect Color="White" BlurRadius="2" ShadowDepth="0" />
                  </Setter.Value>
                </Setter>
                <Setter Property="Background" TargetName="CloseButtonBorder">
                  <Setter.Value>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                      <GradientStop Color="MidnightBlue" Offset="0" />
                      <GradientStop Color="#FFEBEBEB" Offset="0.2" />
                      <GradientStop Color="#FFDDDDDD" Offset="0.2" />
                      <GradientStop Color="MidnightBlue" Offset="1" />
                    </LinearGradientBrush>
                  </Setter.Value>
                </Setter>
              </Trigger>
              <Trigger Property="IsEnabled" Value="False" />
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="Foreground" Value="DarkBlue" />
    </Style>

    <Style x:Key="MiniNotificationsToggleButtonStyle" TargetType="{x:Type ToggleButton}">
      <Style.Triggers>
        <DataTrigger Binding="{Binding Source={x:Static ClientManager:ServiceProvider.ViewManager}, Path=Notifications.Count}" Value="0">
          <Setter Property="Visibility" Value="Collapsed" />
        </DataTrigger>
      </Style.Triggers>
      <Setter Property="Cursor" Value="Hand" />
      <Setter Property="SnapsToDevicePixels" Value="True" />
      <Setter Property="OverridesDefaultStyle" Value="True" />
      <Setter Property="FocusVisualStyle" Value="{x:Null}" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ToggleButton}">
            <Grid x:Name="Root">
              <ContentPresenter Margin="0,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </Window.Resources>

  <!-- Tricks with WS_THICKFRAME cause the window's template to not correspond to the true client size.
       We'll correct for this in the code-behind. -->
  <Grid x:Name="RootPanel" VerticalAlignment="Center" HorizontalAlignment="Stretch" Background="{Binding ElementName=MainWindow, Path=Background}">
    <Border Background="#44000000" CornerRadius="8"/>
    
    <DockPanel Margin="0">
      <DockPanel DockPanel.Dock="Bottom" Height="28" Margin="8">
        <ToggleButton x:Name="MiniNotificationsButton" 
            DockPanel.Dock="Right" 
                      Margin="3,0" 
                      Background="Transparent" 
                      Width="24" Height="24" 
                      VerticalAlignment="Center" 
                      HorizontalAlignment="Center" 
                      ToolTip="Show Notifications"
                      Style="{DynamicResource MiniNotificationsToggleButtonStyle}">
          <FacebookClient:NotificationCountControl x:Name="NotificationCountControl" DisplayCount="{Binding Source={x:Static ClientManager:ServiceProvider.ViewManager}, Path=Notifications.Count}">
            <FacebookClient:NotificationCountControl.Background>
              <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0.000" Color="#FFF9F9" />
                <GradientStop Offset="0.524" Color="Firebrick" />
              </LinearGradientBrush>
            </FacebookClient:NotificationCountControl.Background>
          </FacebookClient:NotificationCountControl>
        </ToggleButton>

        <Popup DockPanel.Dock="Right" Margin="1" x:Name="PART_PopupNotification" AllowsTransparency="True" IsOpen="{Binding ElementName=MiniNotificationsButton,Path=IsChecked}" PlacementTarget="{Binding ElementName=MainWindow}" Placement="Bottom">
          <Border x:Name="DropDownBorder" Background="#FF7489B6" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
            <FacebookClient:NotificationsControl 
              Grid.Row="1"
              VerticalAlignment="Top" 
              HorizontalAlignment="Right" 
              IsDisplayed="{Binding ElementName=MiniNotificationsButton, Path=IsChecked, Mode=TwoWay}" 
              RequestNavigate="_OnRequestNavigate" />
          </Border>
        </Popup>

        <Button DockPanel.Dock="Right" Margin="3,1" ToolTip="Go to Facebook" Style="{StaticResource SimpleButtonStyle}" Click="_OnFacebookButtonClick">
          <Rectangle Width="24" Height="24"  Fill="{StaticResource FacebookDrawingBrush}" />
        </Button>

        <DockPanel VerticalAlignment="Center" HorizontalAlignment="Left" Margin="3">
          <RepeatButton 
              DockPanel.Dock="Left"
              Command="MediaCommands.PreviousTrack"
              Style="{DynamicResource SimpleButtonBaseStyle}"
              Width="18"
              Height="16"
              Margin="5,0"
              VerticalAlignment="Center"
              ToolTip="Previous slide">
            <Rectangle Fill="{DynamicResource LeftArrowLightToolbarDrawingBrush}"/>
          </RepeatButton>

          <ToggleButton
              DockPanel.Dock="Right"
              IsChecked="{Binding ElementName=PART_ZapScroller2, Path=IsShuffled}" 
              Style="{DynamicResource SimpleButtonBaseStyle}">
            <ToggleButton.Template>
              <ControlTemplate TargetType="{x:Type ButtonBase}">
                <Grid>
                  <Ellipse x:Name="ShuffleGlow" Fill="#88FFFFFF" Margin="2,2" >
                    <Ellipse.Effect>
                      <BlurEffect Radius="4"/>
                    </Ellipse.Effect>
                  </Ellipse>
                  <Rectangle x:Name="ShuffleShape" Margin="5,1" Width="18" Height="18" ToolTip="Stop Shuffling" Fill="{DynamicResource ShuffleLightToolbarDrawingBrush}"/>
                </Grid>
                <ControlTemplate.Triggers>
                  <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="False">
                    <Setter TargetName="ShuffleGlow" Property="Opacity" Value="0" />
                    <Setter TargetName="ShuffleShape" Property="ToolTip" Value="Shuffle"/>
                  </DataTrigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </ToggleButton.Template>
          </ToggleButton>

          <ToggleButton
              DockPanel.Dock="Right"
              IsChecked="{Binding ElementName=PART_ZapScroller2, Path=IsPlaying, Mode=OneWay}" 
              Style="{DynamicResource SimpleButtonBaseStyle}"
              Command="MediaCommands.TogglePlayPause"
              VerticalAlignment="Center">
            <ToggleButton.Template>
              <ControlTemplate TargetType="{x:Type ToggleButton}">
                <Rectangle x:Name="PlayPauseShape" 
                    Width="20" 
                    Height="20" 
                    VerticalAlignment="Center" 
                    HorizontalAlignment="Center" 
                    Margin="5,0"
                    ToolTip="Pause"
                    Fill="{DynamicResource PauseLightToolbarDrawingBrush}"/>
                <ControlTemplate.Triggers>
                  <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="False">
                    <Setter TargetName="PlayPauseShape" Property="Fill" Value="{DynamicResource PlayArrowLightToolbarDrawingBrush}"/>
                    <Setter TargetName="PlayPauseShape" Property="ToolTip" Value="Play"/>
                  </DataTrigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </ToggleButton.Template>
          </ToggleButton>
            
          <RepeatButton 
              DockPanel.Dock="Right"
              Command="MediaCommands.NextTrack"
              Style="{DynamicResource SimpleButtonBaseStyle}"
              Height="16" Width="18"
              Margin="5,0"
              VerticalAlignment="Center"
              ToolTip="Next slide">
            <Rectangle Fill="{DynamicResource RightArrowLightToolbarDrawingBrush}"/>
          </RepeatButton>
          
          <TextBlock
              MinWidth="75" 
              HorizontalAlignment="Stretch" 
              VerticalAlignment="Stretch"
              TextAlignment="Center"
              Margin="3" 
              FontSize="14"
              FontWeight="Medium"
              Foreground="White"
              FontFamily="Resources/Fonts/#Gotham" >
            <TextBlock.Text>
              <MultiBinding StringFormat="{}{0} of {1}">
                <Binding Converter="{StaticResource AddConverter}" ConverterParameter="1" ElementName="PART_ZapScroller2" Path="CurrentItemIndex" />
                <Binding ElementName="PART_ZapScroller2" Path="ItemCount" />
              </MultiBinding>
            </TextBlock.Text>
          </TextBlock>
        </DockPanel>
      </DockPanel>

      <FacebookClient:ZapScroller x:Name="PART_ZapScroller2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ItemsSource="{Binding Source={x:Static ClientManager:ServiceProvider.ViewManager}, Path=NewsFeed}"
                                        PlayTimeInterval="6000" IsPlaying="False" IsShuffled="False">
        <FacebookClient:ZapScroller.ItemTemplate>
          <DataTemplate>
            <Grid Margin="8">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>

              <!-- Large right margin because this is inline with the caption buttons. -->
              <DockPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,0,60,0" HorizontalAlignment="Stretch">
                <Rectangle x:Name="Away" DockPanel.Dock="Right" Margin="6,0,0,0" VerticalAlignment="Center" Width="14" Height="14" Fill="{DynamicResource StatusAwayDrawingBrush}" Visibility="Collapsed" />
                <Rectangle x:Name="Online" DockPanel.Dock="Right" Margin="6,0,0,0" VerticalAlignment="Center" Width="14" Height="14" Fill="{DynamicResource StatusOnlineDrawingBrush}" Visibility="Collapsed" />

                <TextBlock HorizontalAlignment="Left" TextAlignment="Left" Text="{Binding Actor.Name}" FontSize="14" FontWeight="Bold" TextTrimming="CharacterEllipsis" Foreground="White" />
              </DockPanel>

              <Button Grid.Row="1" Grid.Column="0" Margin="5,3,0,0"
                      VerticalAlignment="Top"
                      Click="_OnNavigateToContentButtonClicked" 
                      ClientManagerView:ViewManager.NavigationContent="{Binding Actor}"
                      Style="{DynamicResource AnimatedItemButton}">
                <Grid Width="70" Height="70">
                  <Grid RenderTransformOrigin="0.5,0.5">
                    <Grid.RenderTransform>
                      <TransformGroup>
                        <RotateTransform Angle="-6" />
                      </TransformGroup>
                    </Grid.RenderTransform>
                    <Image Source="pack://application:,,,/Resources/Images/avatar_background.png" />
                    <ClientManagerControls:FacebookImageControl FacebookImage="{Binding Actor.Image}" FacebookImageDimensions="Big">
                      <ClientManagerControls:FacebookImageControl.Template>
                        <ControlTemplate TargetType="{x:Type ClientManagerControls:FacebookImageControl}">
                          <Border Margin="4,4,4.5,6">
                            <Image Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageSource}" Stretch="UniformToFill" />
                          </Border>
                        </ControlTemplate>
                      </ClientManagerControls:FacebookImageControl.Template>
                    </ClientManagerControls:FacebookImageControl>
                  </Grid>
                </Grid>
              </Button>

              <Button Grid.Row="2" Grid.Column="0" 
                  VerticalAlignment="Center" 
                  HorizontalAlignment="Right" 
                  Click="_OnNavigateToContentButtonClicked" 
                  ClientManagerView:ViewManager.NavigationContent="{Binding Attachment}"
                  Style="{DynamicResource AnimatedItemButton}">
                <Image Width="24" Height="24" Stretch="Uniform">
                  <Image.Style>
                    <Style TargetType="{x:Type Image}">
                      <Setter Property="Source" Value="{x:Null}" />
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding Attachment.Type}" Value="Photos">
                          <Setter Property="Source" Value="pack://application:,,,/Resources/Images/Icons/photos_icon.png" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Attachment.Type}" Value="Links">
                          <Setter Property="Source" Value="pack://application:,,,/Resources/Images/Icons/links_icon.png" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Attachment.Type}" Value="Video">
                          <Setter Property="Source" Value="pack://application:,,,/Resources/Images/Icons/video_icon.png" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </Image.Style>
                </Image>
              </Button>

              <Grid Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Margin="10" VerticalAlignment="Top">
                <Path Fill="#FFE3E7F0" Stretch="Fill" Stroke="#FFE3E7F0" HorizontalAlignment="Left" Margin="-5,10,0,0" Width="20" Height="20" Data="M0,0 10,2 10,6Z" StrokeThickness="3" VerticalAlignment="Top" />

                <Border VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10,2,2,2" MinHeight="40" Background="#FFE3E7F0" CornerRadius="10" Padding="0">
                  <DockPanel>
                    <TextBlock DockPanel.Dock="Bottom" Margin="10,2" Style="{StaticResource CreatedTextBlockStyle}" Text="{Binding Created, Converter={StaticResource DateTimeConverter}}" />
                    <TextBlock DockPanel.Dock="Top" IsHyphenationEnabled="True" Padding="8,5" TextTrimming="WordEllipsis" TextWrapping="Wrap" FontSize="13px" Foreground="Black" FontFamily="../Fonts/#Gotham">
                      <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                          <Setter Property="Visibility" Value="Visible" />
                          <Style.Triggers>
                            <DataTrigger Binding="{Binding Message}" Value="">
                              <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                          </Style.Triggers>
                        </Style>
                      </TextBlock.Style>
                      <FacebookClient:HyperlinkTextContent Text="{Binding Message}" RequestNavigate="_OnRequestNavigate"  />
                    </TextBlock>

                    <Grid DataContext="{Binding Attachment}" Margin="14,4" VerticalAlignment="Top" HorizontalAlignment="Center">
                      <Button HorizontalAlignment="Left" 
                              Click="_OnNavigateToContentButtonClicked"
                              ClientManagerView:ViewManager.NavigationContent="{Binding}" 
                              IsEnabled="True">
                        <Button.Style>
                          <Style TargetType="Button" BasedOn="{StaticResource AnimatedItemButton}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                              <DataTrigger Binding="{Binding Type}" Value="Video">
                                <Setter Property="Visibility" Value="Visible" />
                              </DataTrigger>
                            </Style.Triggers>
                          </Style>
                        </Button.Style>
                        <ClientManagerControls:FacebookImageControl FacebookImage="{Binding VideoPreviewImage}" FacebookImageDimensions="Small">
                          <ClientManagerControls:FacebookImageControl.Template>
                            <ControlTemplate TargetType="{x:Type ClientManagerControls:FacebookImageControl}">
                              <Image Margin="2" Stretch="Uniform" Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageSource}" />
                            </ControlTemplate>
                          </ClientManagerControls:FacebookImageControl.Template>
                        </ClientManagerControls:FacebookImageControl>
                      </Button>

                      <Button ClientManagerView:ViewManager.NavigationContent="{Binding}"
                              Click="_OnNavigateToContentButtonClicked"
                              IsEnabled="True">
                        <Button.Style>
                          <Style TargetType="Button" BasedOn="{StaticResource AnimatedItemButton}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                              <DataTrigger Binding="{Binding Type}" Value="Photos">
                                <Setter Property="Visibility" Value="Visible" />
                              </DataTrigger>
                            </Style.Triggers>
                          </Style>
                        </Button.Style>

                        <ClientManagerControls:FacebookImageControl FacebookImage="{Binding Photos[0].Image}" FacebookImageDimensions="Small">
                          <ClientManagerControls:FacebookImageControl.Template>
                            <ControlTemplate TargetType="{x:Type ClientManagerControls:FacebookImageControl}">
                              <Image Stretch="Uniform" Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageSource}" />
                            </ControlTemplate>
                          </ClientManagerControls:FacebookImageControl.Template>
                        </ClientManagerControls:FacebookImageControl>
                      </Button>

                      <Grid>
                        <Button ClientManagerView:ViewManager.NavigationContent="{Binding Link}" 
                                Click="_OnNavigateToContentButtonClicked"
                                IsEnabled="True">
                          <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource AnimatedItemButton}">
                              <Setter Property="Visibility" Value="Collapsed" />
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Type}" Value="Links">
                                  <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </Button.Style>
                          <ClientManagerControls:FacebookImageControl FacebookImage="{Binding Links[0].Image}" FacebookImageDimensions="Small">
                            <ClientManagerControls:FacebookImageControl.Template>
                              <ControlTemplate TargetType="{x:Type ClientManagerControls:FacebookImageControl}">
                                <Image Stretch="Uniform" Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageSource}" />
                              </ControlTemplate>
                            </ClientManagerControls:FacebookImageControl.Template>
                          </ClientManagerControls:FacebookImageControl>
                        </Button>
                      </Grid>
                    </Grid>
                  </DockPanel>
                </Border>
              </Grid>
            </Grid>
          </DataTemplate>
        </FacebookClient:ZapScroller.ItemTemplate>
      </FacebookClient:ZapScroller>
    </DockPanel>

    <StackPanel x:Name="CaptionArea" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="8,0" Orientation="Horizontal" FlowDirection="RightToLeft">
      <Button Style="{StaticResource RestoreButtonStyle}" Click="_OnRestoreClicked">
        <Button.ToolTip>
          <ToolTip Placement="Left">Go back to Fishbowl</ToolTip>
        </Button.ToolTip>
      </Button>
      <Button Style="{StaticResource MinimizeButtonStyle}" Click="_OnMinimizeClicked">
        <Button.ToolTip>
          <ToolTip Placement="Left">Minimize</ToolTip>
        </Button.ToolTip>
      </Button>
    </StackPanel>
  </Grid>
</Window>
